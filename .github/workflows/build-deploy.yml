name: Webmap Query Service Consumer CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  project-directory: ./

jobs:
  build:
    name: Release and Build
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'skip-ci') &&
      github.event_name == 'push' &&
      github.repository_owner == 'Greenstand'
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - run: npm i -g semantic-release @semantic-release/{git,exec,changelog}
    - run: semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: npm clean install
      run: npm ci
      working-directory: ${{ env.project-directory }}
    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: ./
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build snapshot with git sha and push on merge
      id: docker_build_snapshot_merge
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: greenstand/${{ github.event.repository.name }}:${{ steps.package-version.outputs.current-version }}
    - name: Build snapshot and push on merge
      id: docker_build_merge
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: greenstand/webmap-query-service-consumer:latest
    - shell: bash
      run: |
        echo '${{ steps.package-version.outputs.current-version }}' > image-tag
    - name: persist tag name
      uses: actions/upload-artifact@v1
      with:
        name: image-tag-${{github.sha}}
        path: image-tag


  deploy:
    name: Deploy latest to development environment
    runs-on: ubuntu-latest
    needs: build
    if: |
      !contains(github.event.head_commit.message, 'skip-ci') &&
      github.event_name == 'push' &&
      github.repository_owner == 'Greenstand'
    steps:
    - uses: actions/checkout@v2
    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: ./
    - name: Download tag name
      uses: actions/download-artifact@v1
      with:
        name: image-tag-${{github.sha}}
    - name: Set image tag name
      id: image-tag-name
      run: |
        value=`cat image-tag-${{github.sha}}/image-tag`
        echo "::set-output name=image-tag-name::$value"
    - name: Install kustomize
      run: curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    - name: Copy kustomize.yml
      run: cp deployment/kustomize/kustomization.yaml deployment/kustomization.yaml
    - name: Run kustomize
      run: (cd deployment && ../kustomize edit set image greenstand/${{ github.event.repository.name }}:${{ steps.image-tag-name.outputs.image-tag-name }} )
    - name: Install doctl for kubernetes
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_TOKEN }}
    - name: Save DigitalOcean kubeconfig
      run: doctl kubernetes cluster kubeconfig save ${{ secrets.DEV_CLUSTER_NAME }}
    - name: Delete completed migration jobs prior to deployment
      run: kubectl -n webmap delete job --ignore-not-found=true webmap-query-consumer-db-migration-job
    - name: Update kubernetes resources
      run: kubectl -n webmap apply --wait -k ./deployment/
