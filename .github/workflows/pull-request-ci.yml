# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: API CI for New Pull Requests

on:
  pull_request:
    branches:
      - main

env:
  project-directory: ./
  DATABASE_URL: postgresql://postgres:postgres@postgres/postgres
  RABBITMQ_URL: amqp://rabbitmq:rabbitmq@rabbitmq

jobs:
  test:
    name: Run all tests
    runs-on: ubuntu-latest
    container: node:16.12.0

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: rabbitmq
          RABBITMQ_DEFAULT_PASS: rabbitmq
        ports:
          - 5672:5672

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: npm clean install
        run: npm ci

      - name: run ESLint
        run: npm run lint

      - name: run db-migrate
        run: npm run db-migrate-ci

      - name: install psql
        run: |
          apt-get update
          apt-get install --yes --no-install-recommends postgresql-client

      - name: run db-copy-region-data
        run: npm run db-seed-region ; npm run db-seed-region-zoom

      - name: run api tests
        run: npm run test

      - name: run build
        run: npm run build

      - name: integration tests
        run: npm run start & npm run test:i
