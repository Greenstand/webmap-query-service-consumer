apiVersion: apps/v1
kind: Deployment
metadata:
  name: webmap-query-service-consumer
  labels:
    app: webmap-query-service-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webmap-query-service-consumer
  template:
    metadata:
      labels:
        app: webmap-query-service-consumer
    spec:
      # initContainers definition only needed if microservice contains db migrations
      #      initContainers:
      #        - name: 'webmap-query-consumer-db-migration-job-init'
      #          image: 'groundnuty/k8s-wait-for:1.3'
      #          imagePullPolicy: IfNotPresent
      #          args:
      #            - 'job'
      #            - 'webmap-query-consumer-db-migration-job'
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: doks.digitalocean.com/node-pool
                    operator: In
                    values:
                      - microservices-node-pool
      containers:
        - name: webmap-query-service-consumer
          image: greenstand/webmap-query-service-consumer:latest
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: webmap-query-database-connection
                  key: db
            - name: DATABASE_SCHEMA
              valueFrom:
                secretKeyRef:
                  name: webmap-query-database-connection
                  key: schema
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-connection
                  key: messageQueue
            - name: NODE_LOG_LEVEL
              value: trace
